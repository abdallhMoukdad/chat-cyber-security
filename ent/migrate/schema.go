// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChatsColumns holds the columns for the "chats" table.
	ChatsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "professor_chats", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "student_chats", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// ChatsTable holds the schema information for the "chats" table.
	ChatsTable = &schema.Table{
		Name:       "chats",
		Columns:    ChatsColumns,
		PrimaryKey: []*schema.Column{ChatsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "chats_professors_chats",
				Columns:    []*schema.Column{ChatsColumns[1]},
				RefColumns: []*schema.Column{ProfessorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "chats_students_chats",
				Columns:    []*schema.Column{ChatsColumns[2]},
				RefColumns: []*schema.Column{StudentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "text", Type: field.TypeString},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "chat_messages", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "professor_received_messages", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "student_sent_messages", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "messages_chats_messages",
				Columns:    []*schema.Column{MessagesColumns[3]},
				RefColumns: []*schema.Column{ChatsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "messages_professors_received_messages",
				Columns:    []*schema.Column{MessagesColumns[4]},
				RefColumns: []*schema.Column{ProfessorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "messages_students_sent_messages",
				Columns:    []*schema.Column{MessagesColumns[5]},
				RefColumns: []*schema.Column{StudentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProfessorsColumns holds the columns for the "professors" table.
	ProfessorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "hire_date", Type: field.TypeTime},
		{Name: "password", Type: field.TypeString},
	}
	// ProfessorsTable holds the schema information for the "professors" table.
	ProfessorsTable = &schema.Table{
		Name:       "professors",
		Columns:    ProfessorsColumns,
		PrimaryKey: []*schema.Column{ProfessorsColumns[0]},
	}
	// StudentsColumns holds the columns for the "students" table.
	StudentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Default: "unknown"},
		{Name: "enrollment_date", Type: field.TypeTime},
		{Name: "password", Type: field.TypeString, Default: "not registered yet"},
		{Name: "national_number", Type: field.TypeString, Default: "unknown"},
		{Name: "phone_number", Type: field.TypeString, Default: "unknown"},
		{Name: "home_location", Type: field.TypeString, Default: "unknown"},
		{Name: "enycrption_key", Type: field.TypeString, Default: "unknown"},
	}
	// StudentsTable holds the schema information for the "students" table.
	StudentsTable = &schema.Table{
		Name:       "students",
		Columns:    StudentsColumns,
		PrimaryKey: []*schema.Column{StudentsColumns[0]},
	}
	// UniversitiesColumns holds the columns for the "universities" table.
	UniversitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "location", Type: field.TypeString},
		{Name: "established_date", Type: field.TypeTime},
	}
	// UniversitiesTable holds the schema information for the "universities" table.
	UniversitiesTable = &schema.Table{
		Name:       "universities",
		Columns:    UniversitiesColumns,
		PrimaryKey: []*schema.Column{UniversitiesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChatsTable,
		MessagesTable,
		ProfessorsTable,
		StudentsTable,
		UniversitiesTable,
	}
)

func init() {
	ChatsTable.ForeignKeys[0].RefTable = ProfessorsTable
	ChatsTable.ForeignKeys[1].RefTable = StudentsTable
	MessagesTable.ForeignKeys[0].RefTable = ChatsTable
	MessagesTable.ForeignKeys[1].RefTable = ProfessorsTable
	MessagesTable.ForeignKeys[2].RefTable = StudentsTable
}
